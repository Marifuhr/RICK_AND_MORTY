{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaryFuhr\\\\Desktop\\\\rick_and_morty\\\\src\\\\components\\\\SearchBar\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './SearchBar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar(props) {\n  _s();\n  const [character, setCharacter] = useState(\"\");\n  const handleInputChange = e => {\n    const {\n      value\n    } = e.target;\n    setCharacter(value);\n  };\n  const handleAddCharacter = () => {\n    props.onSearch(id);\n    setId(\"\");\n  };\n  function handleRandomSearch(event) {\n    event.preventDefault();\n    const maxId = 100; // El máximo id en tu base de datos\n    const randomId = Math.floor(Math.random() * maxId) + 690; // Genera un número aleatorio entre 1 y maxId\n    props.onSearch(randomId);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.containerSearch,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.input,\n      type: \"search\",\n      placeholder: \"Escribe un ID\",\n      name: \"search\",\n      id: \"\",\n      onChange: handleInputChange,\n      value: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: () => props.onSearch(character),\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.aleatorio,\n      onClick: handleRandomSearch,\n      children: \"Aleatorio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_s(SearchBar, \"8SLg3G1o1daq/wzsxqZfGjCF40M=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","SearchBar","props","_s","character","setCharacter","handleInputChange","e","value","target","handleAddCharacter","onSearch","id","setId","handleRandomSearch","event","preventDefault","maxId","randomId","Math","floor","random","className","containerSearch","children","input","type","placeholder","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","aleatorio","_c","$RefreshReg$"],"sources":["C:/Users/MaryFuhr/Desktop/rick_and_morty/src/components/SearchBar/SearchBar.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport styles from './SearchBar.module.css'\r\n\r\nexport default function SearchBar(props) {\r\n\r\n   const [character, setCharacter] = useState(\"\")\r\n\r\n   const handleInputChange = (e)=>{\r\n      const {value} = e.target\r\n      setCharacter(value)\r\n   \r\n\r\n   }\r\n   \r\n   const handleAddCharacter = () => {\r\n      props.onSearch(id);\r\n      setId(\"\");\r\n    };\r\n   function handleRandomSearch(event) {\r\n      event.preventDefault();\r\n      const maxId = 100;  // El máximo id en tu base de datos\r\n      const randomId = Math.floor(Math.random() * maxId) + 690;  // Genera un número aleatorio entre 1 y maxId\r\n      props.onSearch(randomId);\r\n    }\r\n\r\n\r\n\r\n\r\n   return (\r\n      <div className={styles.containerSearch}>\r\n          <input className={styles.input} \r\n          type='search' \r\n          placeholder=\"Escribe un ID\"\r\n          name=\"search\"\r\n          id=\"\"\r\n          onChange={handleInputChange}\r\n          value={id}\r\n  />\r\n         <button className={styles.button} onClick={()=> props.onSearch(character)}>Agregar</button> \r\n         <button className={styles.aleatorio} onClick={handleRandomSearch}>Aleatorio</button>\r\n      </div>\r\n   );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMS,iBAAiB,GAAIC,CAAC,IAAG;IAC5B,MAAM;MAACC;IAAK,CAAC,GAAGD,CAAC,CAACE,MAAM;IACxBJ,YAAY,CAACG,KAAK,CAAC;EAGtB,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC9BR,KAAK,CAACS,QAAQ,CAACC,EAAE,CAAC;IAClBC,KAAK,CAAC,EAAE,CAAC;EACX,CAAC;EACF,SAASC,kBAAkBA,CAACC,KAAK,EAAE;IAChCA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,KAAK,GAAG,GAAG,CAAC,CAAE;IACpB,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,KAAK,CAAC,GAAG,GAAG,CAAC,CAAE;IAC3Df,KAAK,CAACS,QAAQ,CAACO,QAAQ,CAAC;EAC1B;EAKD,oBACGlB,OAAA;IAAKsB,SAAS,EAAExB,MAAM,CAACyB,eAAgB;IAAAC,QAAA,gBACnCxB,OAAA;MAAOsB,SAAS,EAAExB,MAAM,CAAC2B,KAAM;MAC/BC,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,eAAe;MAC3BC,IAAI,EAAC,QAAQ;MACbhB,EAAE,EAAC,EAAE;MACLiB,QAAQ,EAAEvB,iBAAkB;MAC5BE,KAAK,EAAEI;IAAG;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChB,eACKjC,OAAA;MAAQsB,SAAS,EAAExB,MAAM,CAACoC,MAAO;MAACC,OAAO,EAAEA,CAAA,KAAKjC,KAAK,CAACS,QAAQ,CAACP,SAAS,CAAE;MAAAoB,QAAA,EAAC;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC3FjC,OAAA;MAAQsB,SAAS,EAAExB,MAAM,CAACsC,SAAU;MAACD,OAAO,EAAErB,kBAAmB;MAAAU,QAAA,EAAC;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjF;AAEZ;AAAC9B,EAAA,CAvCuBF,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}